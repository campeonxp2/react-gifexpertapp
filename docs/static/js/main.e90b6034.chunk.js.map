{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAkB7C,OACI,mCACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,eA0B/BZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,Y,mCChCrBC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAWH,GAD/C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaXM,GAbW,4CAAH,sDCDNO,EAAc,SAAC,GAAuB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,sDAAf,UACI,qBAAKC,IAAKjB,EACLkB,IAAKR,IACL,4BAAIA,QCLRS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACN1B,EAAOC,GACF0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAEGuB,EDfwBK,CAAa5B,GAAhCa,EAFuB,EAE5BN,KAAae,EAFe,EAEfA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,sDAAd,SAAqElB,IAEpEsB,GAAW,mBAAGJ,UAAU,qDAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAIQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEhBxBkB,EAAe,WAAO,IAAD,EAEM/C,mBAAS,CAAC,cAFhB,mBAEvBgD,EAFuB,KAEXjD,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQiD,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCbjC+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e90b6034.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n}\n\nAddCategory.prototype = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\nexport const getGif = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=COI5U6F2Lk1ZuB5U45UDoHayOCdtHWTf`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}\n","import React from \"react\";\n\nexport const GifGridItem = ({id, title, url} ) => {\n\n    console.log(id, title, url);\n    return (\n        <div className=\"animate__animated animate__fadeIn animate__delay-2s\">\n            <img src={url}\n                 alt={title}/>\n                 <p>{title}</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\nimport {GifGridItem} from \"./GifGridItem\";\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn animate__delay-2s\">{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash animate__delay-2s\">Loading</p>}\n\n            <div className=\"card-grid\">\n\n\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key={img.id}\n                            { ...img} />\n                    ))\n                }\n\n            </div>\n        </>\n\n    )\n}\n","import {useState, useEffect} from 'react'\nimport {getGif} from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => { \n        getGif(category)\n            .then(imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n            });\n    }, [category])\n\n    return state;\n}\n","import React, {useState} from 'react'\nimport {AddCategory} from \"./components/AddCategory\";\nimport {GifGrid} from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(category =>\n                        <GifGrid\n                            key={category}\n                            category={category} />)\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from \"./GifExpertApp\";\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}